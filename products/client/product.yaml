AWSTemplateFormatVersion: '2010-09-09'
Description: Create a Cognito User Pool Client

Parameters:
  CognitoUserPoolId:
    Type: AWS::SSM::Parameter::Value<String>
    Description: The ID of the user pool to which the resource server belongs
    Default: /org/authnz/UserPoolId
  ClientName:
    Type: String
    Description: The name of the client
  ServerName:
    Type: String
    Description: The name of the server
  ScopeEntity:
    Type: String
    Description: The name of the scope
  AccessTokenValidity:
    Type: Number
    Description: The time in minutes that the access token is valid
    Default: 10
  IdTokenValidity:
    Type: Number
    Description: The time in minutes that the ID token is valid
    Default: 10
  RefreshTokenValidityDays:
    Type: Number
    Description: The time in days that the refresh token is valid
    Default: 1
  ReadScope:
    Type: String
    Description: The name of the read scope
    AllowedValues:
      - 'true'
      - 'false'
  WriteScope:
    Type: String
    Description: The name of the write scope
    AllowedValues:
      - 'true'
      - 'false'
  AdminScope:
    Type: String
    Description: The name of the admin scope
    AllowedValues:
      - 'true'
      - 'false'
  HealthScope:
    Type: String
    Description: The name of the health scope
    AllowedValues:
      - 'true'
      - 'false'

Conditions:
  HasReadScope: !Equals [!Ref ReadScope, 'true']
  HasWriteScope: !Equals [!Ref WriteScope, 'true']
  HasAdminScope: !Equals [!Ref AdminScope, 'true']
  HasHealthScope: !Equals [!Ref HealthScope, 'true']

Resources:
  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: !Sub "${ClientName}@${ServerName}"
      UserPoolId: !Ref CognitoUserPoolId
      PreventUserExistenceErrors: ENABLED
      EnableTokenRevocation: true
      GenerateSecret: true
      TokenValidityUnits:
        IdToken: minutes
        AccessToken: minutes
        RefreshToken: days
      AccessTokenValidity: !Ref AccessTokenValidity
      IdTokenValidity: !Ref IdTokenValidity
      RefreshTokenValidity: !Ref RefreshTokenValidityDays
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthFlows:
        - client_credentials
      AllowedOAuthScopes:
        - Fn::If:
          - HasReadScope
          - !Sub 'https://${ServerName}/${ScopeEntity}.read'
          - Ref: AWS::NoValue
        - Fn::If:
          - HasWriteScope
          - !Sub 'https://${ServerName}/${ScopeEntity}.write'
          - Ref: AWS::NoValue
        - Fn::If:
          - HasAdminScope
          - !Sub 'https://${ServerName}/${ScopeEntity}.admin'
          - Ref: AWS::NoValue
        - Fn::If:
          - HasHealthScope
          - !Sub 'https://${ServerName}/health.read'
          - Ref: AWS::NoValue
      ReadAttributes:
        - name
      WriteAttributes:
        - name
      ExplicitAuthFlows:
        - ALLOW_REFRESH_TOKEN_AUTH
      SupportedIdentityProviders:
        - COGNITO